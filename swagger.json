{
    "swagger": "2.0",
    "info": {
        "description": "Documentation of hostel management system API",
        "version": "1.0.0",
        "title": "Hostel_Management_System",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "imintrouble@gmail.com"
        }
    },
    "host": "https://last-try-blue.vercel.app/",
    "basePath": "/",
    "tags": [
        {
            "name": "Login",
            "description": "Everything about your Login",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Record",
            "description": "Operations about record",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Create login",
                "description": "This can only be done by the logged in user.",
                "operationId": "createLogin",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/addRecord": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Create record",
                "description": "This can only be done by the logged in user.",
                "operationId": "createrRecord",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user Record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createRecord"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/getRecord": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Get record",
                "description": "This can only be done by the logged in user.",
                "operationId": "getRecord",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/updateRecord/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Update record",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateRecord",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of body",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user Record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateRecord"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "Login": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "createRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "updateRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}